generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(uuid())
  email           String        @unique
  fullName        String?
  profilePicture  String?
  contactNo       String?
  updatedAt       DateTime      @updatedAt @default(now())
  password        String
  roles           Role[]
  responses       Response[]
}

model Event {
  id                    String      @id @default(uuid())
  name                  String
  description           String
  location              String
  startDate            DateTime     
  endDate              DateTime     
  registrationDeadline DateTime?
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt @default(now())
  roles                Role[]
  forms                Form[]
  responses            Response[]
}

model Role {
  userId  String
  eventId String
  role    String
  user    User   @relation(fields: [userId], references: [id])
  event   Event  @relation(fields: [eventId], references: [id])

  @@id([userId, eventId])
}

model Form {
  id          Int         @id @default(autoincrement())
  eventId     String
  fieldOrder  Int[]
  event       Event       @relation(fields: [eventId], references: [id])
  fields      FormField[]
  responses   Response[]
}

model FormField {
  id             Int           @id @default(autoincrement())
  value          Json
  formId         Int?
  form           Form?         @relation(fields: [formId], references: [id])
  responseFields ResponseField[]
}

model Response {
  id             Int           @id @default(autoincrement())
  eventId        String
  submittedBy    String
  submittedAt    DateTime      @default(now())
  formId         Int?
  event          Event         @relation(fields: [eventId], references: [id])
  user           User          @relation(fields: [submittedBy], references: [id])
  form           Form?         @relation(fields: [formId], references: [id])
  responseFields ResponseField[]
}

model ResponseField {
  id            Int        @id @default(autoincrement())
  formFieldId   Int
  responseId    Int?
  value         Json
  formField     FormField   @relation(fields: [formFieldId], references: [id])
  formResponse  Response?   @relation(fields: [responseId], references: [id])
}
